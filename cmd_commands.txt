python manage.py makemigrations && \
python manage.py migrate && \
python manage.py collectstatic && \
cp -r /app/collected_static/. /backend_static/static/ && \
python manage.py createsuperuser && \
exit

--email t@t.ru --username arteic --first_name arteic --last_name arteic


cd ../postman_collection/ && bash clear_db.sh && cd ../backend/ && python manage.py runserver


python manage.py makemigrations && \
python manage.py migrate && \
python manage.py collectstatic && \
cp -r /app/collected_static/. /backend_static/static/ && \
python manage.py createsuperuser --email t@t.ru --username arteic && \
exit



class CustomUpdateModelMixin(object):
    """
    Объект всегда может быть обновлён только частично
    """
    def update(self, request, *args, **kwargs):
        serializer = kwargs.pop('serializer', None)
        instance = self.get_object()
        if not serializer:
            serializer = self.get_serializer_class()
        serializer = serializer(instance, data=request.data, partial=True)
        serializer.is_valid(raise_exception=True)
        self.perform_update(serializer)

        if getattr(instance, '_prefetched_objects_cache', None):
            instance._prefetched_objects_cache = {}

        return Response(serializer.data, status=HTTP_200_OK)

    def partial_update(self, request, *args, **kwargs):
        return self.update(request, *args, **kwargs)

    def perform_update(self, serializer):
        serializer.save()



                constraints = [
            models.CheckConstraint(
                check=~models.Q(subscriber=models.F('user')),
                name='subscribe_yourself_constraint',
            )
        ]